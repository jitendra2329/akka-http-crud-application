[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.9 (Oracle Corporation Java 21.0.1)
[debug] Load.defaultLoad until apply took 112.429431ms
[debug]           Load.loadUnit: plugins took 77.403396ms
[debug]           Load.loadUnit: defsScala took 0.338792ms
[debug] [Loading] Scanning directory /home/nashtech/Documents/MobileStore/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/nashtech/Documents/MobileStore/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 23.697812 ms
[debug]               Load.resolveProject(mobilestore-build) took 55.498071ms
[debug]             Load.loadTransitive: finalizeProject(Project(id mobilestore-build, base: /home/nashtech/Documents/MobileStore/project, plugins: List(<none>))) took 104.559904ms
[debug] [Loading] Done in /home/nashtech/Documents/MobileStore/project, returning: (mobilestore-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 129.617042ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.294126ms
[debug]         Load.loadUnit(file:/home/nashtech/Documents/MobileStore/project/, ...) took 214.397425ms
[debug]       Load.apply: load took 414.56255ms
[debug]       Load.apply: resolveProjects took 6.83914ms
[debug]       Load.apply: finalTransforms took 59.62343ms
[debug]       Load.apply: config.delegates took 6.153793ms
[debug]       Load.apply: Def.make(settings)... took 393.888614ms
[debug]       Load.apply: structureIndex took 104.376185ms
[debug]       Load.apply: mkStreams took 1.486594ms
[info] loading project definition from /home/nashtech/Documents/MobileStore/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1781.15769ms
[debug]     Load.loadUnit: defsScala took 0.005631ms
[debug] [Loading] Scanning directory /home/nashtech/Documents/MobileStore
[debug]       Load.loadUnit: mkEval took 6.719748ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.677013 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 2.483062ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: /home/nashtech/Documents/MobileStore, plugins: List(<none>))) took 5.013197ms
[debug] [Loading] Done in /home/nashtech/Documents/MobileStore, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 162.571849ms
[debug]     Load.loadUnit: cleanEvalClasses took 4.380402ms
[debug]   Load.loadUnit(file:/home/nashtech/Documents/MobileStore/, ...) took 1949.728182ms
[debug] Load.apply: load took 1976.134511ms
[debug] Load.apply: resolveProjects took 0.152893ms
[debug] Load.apply: finalTransforms took 9.127374ms
[debug] Load.apply: config.delegates took 0.35052ms
[debug] Load.apply: Def.make(settings)... took 88.480515ms
[debug] Load.apply: structureIndex took 30.751883ms
[debug] Load.apply: mkStreams took 0.002882ms
[info] set current project to MobileStore (in build file:/home/nashtech/Documents/MobileStore/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[warn] sbt server could not start because there's another instance of sbt running on this build.
[warn] Running multiple instances is unsupported
