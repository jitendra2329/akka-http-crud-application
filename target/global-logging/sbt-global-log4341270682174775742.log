[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.9 (Oracle Corporation Java 21.0.1)
[debug] Load.defaultLoad until apply took 118.592056ms
[debug]           Load.loadUnit: plugins took 71.380934ms
[debug]           Load.loadUnit: defsScala took 0.366085ms
[debug] [Loading] Scanning directory /home/nashtech/Documents/MobileStore/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/nashtech/Documents/MobileStore/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 25.686642 ms
[debug]               Load.resolveProject(mobilestore-build) took 43.470862ms
[debug]             Load.loadTransitive: finalizeProject(Project(id mobilestore-build, base: /home/nashtech/Documents/MobileStore/project, plugins: List(<none>))) took 94.246054ms
[debug] [Loading] Done in /home/nashtech/Documents/MobileStore/project, returning: (mobilestore-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 114.153177ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.237513ms
[debug]         Load.loadUnit(file:/home/nashtech/Documents/MobileStore/project/, ...) took 191.743972ms
[debug]       Load.apply: load took 410.671537ms
[debug]       Load.apply: resolveProjects took 7.787216ms
[debug]       Load.apply: finalTransforms took 74.547539ms
[debug]       Load.apply: config.delegates took 8.77686ms
[debug]       Load.apply: Def.make(settings)... took 444.79652ms
[debug]       Load.apply: structureIndex took 117.3213ms
[debug]       Load.apply: mkStreams took 1.85756ms
[info] loading project definition from /home/nashtech/Documents/MobileStore/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1779.610872ms
[debug]     Load.loadUnit: defsScala took 0.005616ms
[debug] [Loading] Scanning directory /home/nashtech/Documents/MobileStore
[debug]       Load.loadUnit: mkEval took 5.669368ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.025565 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 2.379249ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: /home/nashtech/Documents/MobileStore, plugins: List(<none>))) took 5.445789ms
[debug] [Loading] Done in /home/nashtech/Documents/MobileStore, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2092.863301ms
[debug]     Load.loadUnit: cleanEvalClasses took 4.869447ms
[debug]   Load.loadUnit(file:/home/nashtech/Documents/MobileStore/, ...) took 3879.03422ms
[debug] Load.apply: load took 3899.735558ms
[debug] Load.apply: resolveProjects took 0.12467ms
[debug] Load.apply: finalTransforms took 30.512714ms
[debug] Load.apply: config.delegates took 0.369496ms
[debug] Load.apply: Def.make(settings)... took 86.4587ms
[debug] Load.apply: structureIndex took 26.958409ms
[debug] Load.apply: mkStreams took 0.00473ms
[info] set current project to MobileStore (in build file:/home/nashtech/Documents/MobileStore/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[warn] sbt server could not start because there's another instance of sbt running on this build.
[warn] Running multiple instances is unsupported
